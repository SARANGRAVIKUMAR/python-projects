#creating a node for the linked list 
class Node:
	def __init__(self,data):
		self.data=data
		self.next=None #since it points to nowhere initially so its givens as none

#each node created will be added to the linkedlist
class LinkedList:
	# as our linked list is initally emplty we have to add head as None
	def __init__(self):
		self.head=None

	def insertEnd(self,newNode):
		"""first we have to check whether head of our linked list is empty
		if our head of our linked list is empty then we have 
		to make our newNode as our head node """
		if self.head is None:
			self.head=newNode
		else:
			lastNode = self.head
			while True:
				if lastNode.next is None:
					break
				else:
					lastNode = lastNode.next
			lastNode.next=newNode

	def listLength(self):
		currentNode = self.head
		length = 0
		while currentNode is not None:
			length+=1
			currentNode = currentNode.next
		return length

	def printList(self):
		currentNode = self.head
		while True:
			if currentNode is None:
				break
			print(currentNode.data)
			currentNode=currentNode.next


	"""adding new node as the head node
	1)first we have to store head node to the temp node
	2)make the new node as the head node
	3)link the head.next to the temp node 
	4) delete the temp node
	"""
	def insertHead(self,newNode):
		temp = self.head
		self.head = newNode
		self.head.next = temp
		del temp

	def insertAt(self,newNode,position):
		if position==0:
			self.insertHead(newNode)
			return
		currentNode = self.head
		currentPosition=0
		while True:
			if currentPosition ==position:
				previousNode.next = newNode
				newNode.next=currentNode
				break
			previousNode = currentNode
			currentNode = currentNode.next
			currentPosition+=1

	def deleteEnd(self):
		lastNode = self.head
		while lastNode.next is not None:
			previousNode =lastNode
			lastNode = lastNode.next
		previousNode.next=None
	
	def deleteAt(self,newNode,position):
		currentNode = self.head
		currentPosition=0
		while True:
			if currentPosition ==position:
				previousNode.next = currentNode.next
				currentNode.next =None
				break
			previousNode = currentNode
			currentNode = currentNode.next
			currentPosition+=1


"""
Node=>data,next
firstNode.data=>john,firstNode.next=>None
"""
firstNode = Node("john")
linkedlist =LinkedList()
linkedlist.insertEnd(firstNode)
secondNode = Node("ben")
linkedlist.insertEnd(secondNode)
thirdNode = Node("sarang")
# adding the third node to the position 1
linkedlist.insertAt(thirdNode,0)
linkedlist.deleteAt(secondNode,1)
linkedlist.printList()
